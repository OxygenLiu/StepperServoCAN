;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir      = src
default_envs = S42Bv2

[env]
platform = ststm32@^11.0.0
build_flags = -fmax-errors=5
  -g
  -ggdb
  -D STM32F10X_MD
  -D USE_STDPERIPH_DRIVER


[env:S42Bv2_debug]
build_type = debug
board = genericSTM32F103C8
framework = stm32cube
upload_protocol = stlink
debug_tool = stlink
debug_init_break = 
debug_build_flags = -O0 -ggdb3 -g3
build_flags = ${env.build_flags}
  -D S42Bv2
  -D BTT

#MKS SERVO42B(STM32F103C8T6)
[env:mks_servo42b]
board = genericSTM32F103C8
framework = stm32cube
upload_protocol = stlink
debug_tool = stlink
build_flags = ${env.build_flags}
  -D MKS_SERVO42B
  -D MKS

#MKS SERVO57B(STM32F103CBT6)
[env:mks_servo57b]
board = genericSTM32F103CB
build_flags = ${env.build_flags}
  -D MKS_SERVO57B
  -D MKS
  
#Bigtreetech S42Bv2 (STM32F103C8T6)
[env:S42Bv2]
board = genericSTM32F103C8
framework = stm32cube
upload_protocol = stlink
debug_tool = stlink
build_flags = ${env.build_flags}
  -D S42Bv2
  -D BTT

  
#Bigtreetech S57Bv2 (STM32F103C8T6)
[env:S57Bv2]
board = genericSTM32F103C8
framework = stm32cube
upload_protocol = stlink
debug_tool = stlink
build_flags = ${env.build_flags}
  -D S57Bv2
  -D BTT